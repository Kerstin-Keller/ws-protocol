# automatically generated by the FlatBuffers compiler, do not modify

# namespace: v1

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Unadvertise(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Unadvertise()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUnadvertise(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Unadvertise
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unadvertise
    def Channels(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # Unadvertise
    def ChannelsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # Unadvertise
    def ChannelsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Unadvertise
    def ChannelsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def Start(builder): builder.StartObject(1)
def UnadvertiseStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddChannels(builder, channels): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(channels), 0)
def UnadvertiseAddChannels(builder, channels):
    """This method is deprecated. Please switch to AddChannels."""
    return AddChannels(builder, channels)
def StartChannelsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def UnadvertiseStartChannelsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartChannelsVector(builder, numElems)
def End(builder): return builder.EndObject()
def UnadvertiseEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)